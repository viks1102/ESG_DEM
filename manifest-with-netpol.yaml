---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-a
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingpong-a
  namespace: pingpong-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pingpong-a
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pingpong-a
    spec:
      containers:
        - name: pingpong-a
          image: ping-pong:test
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: TARGET
              value: "http://pingponger-b.pingpong-b:8080/ping"
            - name: TICK_MS
              value: "100"
            - name: METRICS__PATH
              value: "/-/metrics"
            - name: METRICS__PORT
              value: "9080"
            - name: SERVICE__PORT
              value: "8080"  
---
apiVersion: v1
kind: Service
metadata:
  name: pingponger-a
  namespace: pingpong-a
spec:
  selector:
    app.kubernetes.io/name: pingpong-a
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    # - name: metrics
    #   protocol: TCP
    #   port: 9080
    #   targetPort: 9080
---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-b
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingpong-b
  namespace: pingpong-b
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pingpong-b
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pingpong-b
    spec:
      containers:
        - name: pingpong-b
          image: ping-pong:test
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: TARGET
              value: "http://pingponger-a.pingpong-a:8080/ping"  # Set the target URL here
            - name: TICK_MS
              value: "100"
            - name: METRICS__PATH
              value: "/-/metrics"
            - name: METRICS__PORT
              value: "9080"
            - name: SERVICE__PORT
              value: "8080"    
---
apiVersion: v1
kind: Service
metadata:
  name: pingponger-b
  namespace: pingpong-b
spec:
  selector:
    app.kubernetes.io/name: pingpong-b
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    # - name: metrics
    #   protocol: TCP
    #   port: 9080
    #   targetPort: 9080  
---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: deny-all
#   namespace: default
# spec:
#   podSelector: { }
#   policyTypes:
#     - Ingress
#     - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: default
spec:
  policyTypes:
    - Egress
  podSelector: { }
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-pingpong-communication
  namespace: pingpong-a
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: pingpong-a
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: pingpong-b
      podSelector:
        matchLabels:
          app.kubernetes.io/name: pingpong-b
    ports:
    - protocol: TCP
      port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-pingpong-communication
  namespace: pingpong-b
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: pingpong-b
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: pingpong-a
      podSelector:
        matchLabels:
          app.kubernetes.io/name: pingpong-a
    ports:
    - protocol: TCP
      port: 8080
---
